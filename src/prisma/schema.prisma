generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- USERS ---
model User {
  id    Int    @id @default(autoincrement())
  email String @unique @db.VarChar(255)
  name  String?

  // Relations
  carts  Cart[]
  orders Order[]
}

// --- CLOTHES ---
model Clothes {
  id          Int    @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  image       String?

  // Relations
  carts      Cart[]
  orderItems OrderItem[]
}

// --- CARTS ---
model Cart {
  id          Int     @id @default(autoincrement())
  description String
  price       Float
  image       String?
  quantity    Int
  clothe_id   Int
  user_id     Int

  // Relations
  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  clothe  Clothes @relation(fields: [clothe_id], references: [id], onDelete: Restrict)

  @@map("cart")
}

// --- ORDERS ---
model Order {
  id         Int         @id @default(autoincrement())
  user_id    Int
  name       String      @db.VarChar(255)
  email      String      @db.VarChar(255)
  address    String      @db.VarChar(255)
  phone      String      @db.VarChar(15)
  created_at DateTime    @default(now())

  // Relations
  user       User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  orderItems OrderItem[]
}

// --- ORDER ITEMS ---
model OrderItem {
  id            Int      @id @default(autoincrement())
  order_id      Int
  product_id    Int
  quantity      Int
  price         Decimal  @db.Decimal(10, 2)
  product_image String   @db.VarChar(255)
  status        String   @db.VarChar(255)
  delivery      String   @db.VarChar(200)
  date_created  DateTime @default(now())

  // Relations
  order   Order   @relation(fields: [order_id], references: [id], onDelete: Cascade)
  product Clothes @relation(fields: [product_id], references: [id], onDelete: Restrict)

  @@index([order_id], map: "idx_order_items_order_id")
  @@index([product_id], map: "idx_order_items_product_id")
}

// --- SESSIONS ---
model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text
  expiresAt DateTime

  @@map("sessions")
  @@index([expiresAt], map: "idx_sessions_expires_at")
}
