// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id       Int     @id @default(autoincrement())
  email    String  @unique @db.VarChar(255)
  name     String?

  // Relations
  carts    cart[]
}

model cart {
  id          Int    @id @default(autoincrement())
  description String
  price       Float
  image       String?
  quantity    Int
  clothe_id   Int
  email       String  @db.VarChar(255)

  // Relations
  user user @relation(fields: [email], references: [email], onDelete: Cascade, map: "fk_cart_user_email_unique")
}

model clothes {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  image       String?
}

// --- ORDER ITEMS MODEL ---
model OrderItem {
  order_item_id Int       @id @default(autoincrement())
  order_id      Int
  product_id    Int
  quantity      Int
  price         Decimal   @db.Decimal(10, 2)
  product_image String    @db.VarChar(255)
  status        String    @db.VarChar(255)
  delivery      String    @db.VarChar(200)
  date_created  DateTime? @default(now()) @db.Timestamp(0)

  @@index([order_id], map: "idx_order_items_order_id")
  @@index([product_id], map: "idx_order_items_product_id")
}

// --- ORDERS MODEL ---
model Order {
  order_id   Int       @id @default(autoincrement())
  user_id    String    @db.VarChar(200)
  name       String    @db.VarChar(255)
  email      String    @db.VarChar(255)
  address    String    @db.VarChar(255)
  phone      String    @db.VarChar(15)
  created_at DateTime? @default(now()) @db.Timestamp(0)
}

// --- SESSION MODEL ---
model Session {
  id        String   @id
  sid       String   @unique @map("sid")
  data      String   @db.Text
  expiresAt DateTime

  @@map("sessions")
  @@index([expiresAt], map: "idx_sessions_expires_at")
}
